{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
<section class="hero-banner hero-banner-parallex">
	<div class="container">
		<div class="row">
			<div class="col-12">
				<div class="free-quote-content">
					{% if paragraph.field_identity_title.value is not empty %}
						<h1>{{ paragraph.field_identity_title.value }}</h1>
					{% endif %}
					<h4>Yucatan<span>is
						</span>
						{% if paragraph.field_identity_subtitle.value is not empty %}
							<div id="typewriter">
								{{ paragraph.field_identity_subtitle.value }}
							</div>
            {% endif %}
						</h4>
            {% if paragraph.field_description.value is not empty %}
						<p>{{ paragraph.field_description.value|raw }}</p>
            {% endif %}
						<div class="clearfix"></div>
						{% for item in paragraph.field_link_book %}
							<a href="{{ item.url }}" class="btn btn-secondary">{{ item.title }}</a>
						{% endfor %}
					</a>
				</div>
			</div>
		</div>
	</div>
	<div class="parallax-gallry">
		{% for key,items in paragraph.field_image %}
			<div class="item">
				<img src="{{file_url(items.entity.field_media_image.entity.uri.value)}}" alt="{{items.entity.field_media_image.alt}}">
			</div>
		{% endfor %}
	</div>
</section>

{% if drupal_view_result('region_category', 'block_1') is not empty %}
<section class="categorization ptb-200">
 {{ drupal_view('region_category','block_1') }}
</section>
{% endif %}